# Generated by Django 4.2.23 on 2025-09-11 07:46

import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('medical_cms', '0002_productcategory_productlistplugin_product'),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='书籍名称')),
                ('author', models.CharField(max_length=255, verbose_name='作者')),
                ('category', models.CharField(blank=True, max_length=100, null=True, verbose_name='分类')),
                ('description', models.TextField(blank=True, verbose_name='书籍描述')),
                ('cover_url', models.CharField(blank=True, max_length=500, verbose_name='封面URL')),
                ('pdf_file_path', models.CharField(blank=True, max_length=500, verbose_name='PDF文件路径')),
                ('file_size', models.IntegerField(blank=True, null=True, verbose_name='文件大小(字节)')),
                ('publish_date', models.DateTimeField(blank=True, null=True, verbose_name='出版日期')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '书籍',
                'verbose_name_plural': '书籍',
                'ordering': ['-created_time'],
            },
        ),
        migrations.CreateModel(
            name='BookCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='分类名称')),
                ('description', models.TextField(blank=True, verbose_name='分类描述')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='排序')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='medical_cms.bookcategory', verbose_name='父分类')),
            ],
            options={
                'verbose_name': '书籍分类',
                'verbose_name_plural': '书籍分类',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='BookTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='标签名称')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '书籍标签',
                'verbose_name_plural': '书籍标签',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BookTagRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag_relations', to='medical_cms.book', verbose_name='书籍')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='book_relations', to='medical_cms.booktag', verbose_name='标签')),
            ],
            options={
                'verbose_name': '书籍-标签关系',
                'verbose_name_plural': '书籍-标签关系',
                'unique_together': {('book', 'tag')},
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='product_gallery/')),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': '商品图库图片',
                'verbose_name_plural': '商品图库图片',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='全名')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='手机号码')),
                ('avatar_url', models.CharField(blank=True, max_length=500, null=True, verbose_name='头像URL')),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('hashed_password', models.CharField(blank=True, max_length=255, verbose_name='哈希密码')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='最后登录时间')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='是否超级用户')),
                ('is_staff', models.BooleanField(default=False, verbose_name='是否工作人员')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='加入时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='medical_user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='medical_user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'users',
            },
        ),
        migrations.RemoveField(
            model_name='doctorlistplugin',
            name='cmsplugin_ptr',
        ),
        migrations.RemoveField(
            model_name='doctorlistplugin',
            name='department',
        ),
        migrations.RemoveField(
            model_name='newslistplugin',
            name='cmsplugin_ptr',
        ),
        migrations.RemoveField(
            model_name='productlistplugin',
            name='category',
        ),
        migrations.RemoveField(
            model_name='productlistplugin',
            name='cmsplugin_ptr',
        ),
        migrations.RemoveField(
            model_name='productlistplugin',
            name='department',
        ),
        migrations.RemoveField(
            model_name='servicelistplugin',
            name='cmsplugin_ptr',
        ),
        migrations.RemoveField(
            model_name='servicelistplugin',
            name='department',
        ),
        migrations.RemoveField(
            model_name='product',
            name='gallery_images',
        ),
        migrations.AlterField(
            model_name='doctor',
            name='photo',
            field=models.ImageField(blank=True, null=True, upload_to='doctor_photos/', verbose_name='医生照片'),
        ),
        migrations.AlterField(
            model_name='medicaldepartment',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='department_images/', verbose_name='科室图片'),
        ),
        migrations.AlterField(
            model_name='medicalnews',
            name='featured_image',
            field=models.ImageField(blank=True, null=True, upload_to='news_images/', verbose_name='特色图片'),
        ),
        migrations.AlterField(
            model_name='medicalservice',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='service_images/', verbose_name='服务图片'),
        ),
        migrations.AlterField(
            model_name='product',
            name='featured_image',
            field=models.ImageField(blank=True, null=True, upload_to='product_images/', verbose_name='主图片'),
        ),
        migrations.AlterField(
            model_name='productcategory',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='category_images/', verbose_name='分类图片'),
        ),
        migrations.DeleteModel(
            name='ContactFormPlugin',
        ),
        migrations.DeleteModel(
            name='DoctorListPlugin',
        ),
        migrations.DeleteModel(
            name='NewsListPlugin',
        ),
        migrations.DeleteModel(
            name='ProductListPlugin',
        ),
        migrations.DeleteModel(
            name='ServiceListPlugin',
        ),
        migrations.AddField(
            model_name='productimage',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='medical_cms.product'),
        ),
        migrations.AddField(
            model_name='book',
            name='tags',
            field=models.ManyToManyField(blank=True, through='medical_cms.BookTagRelation', to='medical_cms.booktag', verbose_name='标签'),
        ),
        migrations.AlterField(
            model_name='doctor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='medical_cms.user', verbose_name='用户'),
        ),
        migrations.AlterField(
            model_name='medicalnews',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medical_cms.user', verbose_name='作者'),
        ),
    ]
